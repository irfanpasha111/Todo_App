{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo_appd\\\\frontend\\\\src\\\\components\\\\TaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onTaskAdded\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [priority, setPriority] = useState('Low');\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post('http://localhost:8080/api/tasks', {\n      title,\n      description,\n      dueDate,\n      priority,\n      completed: false\n    }).then(() => {\n      setTitle('');\n      setDescription('');\n      setDueDate('');\n      setPriority('Low');\n      onTaskAdded(); // refresh task list\n    }).catch(error => {\n      console.error('Error creating task:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: dueDate,\n      onChange: e => setDueDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: priority,\n      onChange: e => setPriority(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Low\",\n        children: \"Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Medium\",\n        children: \"Medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"High\",\n        children: \"High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"oTPnQVwgbSIrn9q8E0lAEEaeWgo=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TaskForm","onTaskAdded","_s","title","setTitle","description","setDescription","dueDate","setDueDate","priority","setPriority","handleSubmit","e","preventDefault","post","completed","then","catch","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/todo_appd/frontend/src/components/TaskForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TaskForm: React.FC<{ onTaskAdded: () => void }> = ({ onTaskAdded }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const [priority, setPriority] = useState('Low');\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    axios.post('http://localhost:8080/api/tasks', {\r\n      title,\r\n      description,\r\n      dueDate,\r\n      priority,\r\n      completed: false\r\n    })\r\n    .then(() => {\r\n      setTitle('');\r\n      setDescription('');\r\n      setDueDate('');\r\n      setPriority('Low');\r\n      onTaskAdded(); // refresh task list\r\n    })\r\n    .catch(error => {\r\n      console.error('Error creating task:', error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Add New Task</h2>\r\n      <input type=\"text\" placeholder=\"Title\" value={title} onChange={e => setTitle(e.target.value)} required />\r\n      <input type=\"text\" placeholder=\"Description\" value={description} onChange={e => setDescription(e.target.value)} />\r\n      <input type=\"date\" value={dueDate} onChange={e => setDueDate(e.target.value)} />\r\n      <select value={priority} onChange={e => setPriority(e.target.value)}>\r\n        <option value=\"Low\">Low</option>\r\n        <option value=\"Medium\">Medium</option>\r\n        <option value=\"High\">High</option>\r\n      </select>\r\n      <button type=\"submit\">Add Task</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}